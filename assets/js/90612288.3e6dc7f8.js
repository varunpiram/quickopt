"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[839],{9866:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>a,toc:()=>m});var i=t(4848),o=t(8453);const r={sidebar_position:3},s="Examples",a={id:"genetic/examples",title:"Examples",description:"McCormick Function",source:"@site/docs/genetic/examples.md",sourceDirName:"genetic",slug:"/genetic/examples",permalink:"/quickopt/docs/genetic/examples",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Description",permalink:"/quickopt/docs/genetic/description"},next:{title:"References",permalink:"/quickopt/docs/genetic/references"}},c={},m=[{value:"McCormick Function",id:"mccormick-function",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",img:"img",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(n.h2,{id:"mccormick-function",children:"McCormick Function"}),"\n",(0,i.jsxs)(n.p,{children:["The McCormick function is a multimodal function that is commonly used to test optimization algorithms. It is defined as ",(0,i.jsx)(n.code,{children:"f(x,y) = sin(x + y) + (x - y)**2 - 1.5*x + 2.5*y + 1"})," along the domain ",(0,i.jsx)(n.code,{children:"[-1.5, 4] x [-3, 4]"}),". The global minimum of this function is located at ",(0,i.jsx)(n.code,{children:"f(-0.54719, -1.54719) = -1.9133"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["We implement the McCormick function as follows (note ",(0,i.jsx)(n.code,{children:"genetic"})," maximizes fitness, so we negate the function):"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def fitness(params):\n    x, y = params\n    return -(np.sin(x + y) + (x - y)**2 - 1.5*x + 2.5*y + 1)\n"})}),"\n",(0,i.jsx)(n.p,{children:"We then implement our mutation function to scale our parameters randomly, while staying within our search space:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"import random\ndef mutate(params):\n    new_params = params[:]\n    index = random.randint(0, len(params) - 1)\n    new_params[index] *= random.uniform(0, 2)\n    new_params[0] = max(-1.5, min(4, new_params[0]))\n    new_params[1] = max(-3, min(4, new_params[0]))\n    return new_params\n"})}),"\n",(0,i.jsx)(n.p,{children:"We implement our generation function to randomly generate parameters:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"import random\ndef generate():\n        return [random.uniform(-1.5, 4), random.uniform(-3, 4)]\n"})}),"\n",(0,i.jsx)(n.p,{children:"Finally, we run our genetic algorithm. We choose to run the algorithm for 10 generations, with 50 candidate solutions in each, using 5 parents and implementing elitism with 5 survivors:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"result = quickopt.genetic_double(fitness=objective, mutate=mutate, generate=generate, generations=10, population_size=50, reproduction_ct=5, survivor_ct=5, verbose=1)\n"})}),"\n",(0,i.jsx)(n.p,{children:"The following is a heatmap of the optimization process, with each point representing a new optimal solution found by the algorithm:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Genetic Algorithm Optimization Heatmap",src:t(5957).A+"",width:"1000",height:"800"})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},5957:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/mc-genetic-e9f4220686f39b18c0a549957666d55a.png"},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var i=t(6540);const o={},r=i.createContext(o);function s(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);