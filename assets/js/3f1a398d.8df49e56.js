"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[230],{7340:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>d});var i=s(4848),t=s(8453);const r={sidebar_position:1},o="Usage",l={id:"bayesopt_tpe/usage",title:"Usage",description:"Import",source:"@site/docs/bayesopt_tpe/usage.md",sourceDirName:"bayesopt_tpe",slug:"/bayesopt_tpe/usage",permalink:"/quickopt/docs/bayesopt_tpe/usage",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Bayesian Optimization w/ TPE",permalink:"/quickopt/docs/category/bayesian-optimization-w-tpe"},next:{title:"Description",permalink:"/quickopt/docs/bayesopt_tpe/description"}},c={},d=[{value:"Import",id:"import",level:2},{value:"<code>bayesopt_tpe</code>",id:"bayesopt_tpe",level:2},{value:"Signature",id:"signature",level:3},{value:"Parameters",id:"parameters",level:3},{value:"Output",id:"output",level:3},{value:"Notes",id:"notes",level:3}];function a(e){const n={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"usage",children:"Usage"}),"\n",(0,i.jsx)(n.h2,{id:"import",children:"Import"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"from quickopt.bayesopt_tpe import bayesopt_tpe\n"})}),"\n",(0,i.jsx)(n.h2,{id:"bayesopt_tpe",children:(0,i.jsx)(n.code,{children:"bayesopt_tpe"})}),"\n",(0,i.jsxs)(n.p,{children:["Uses Bayesian Optimization with Tree-structured Parzen Estimator (TPE) to ",(0,i.jsx)(n.strong,{children:"minimize"})," a double function."]}),"\n",(0,i.jsx)(n.h3,{id:"signature",children:"Signature"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"bayesopt_tpe(funct, space_min, space_max, iterations=100, samples=10, acquisition_samples=100, verbose=1, threshold=0.5, group_cap=9999, bandwidth=[], prior_weight=1, split=-107.2931, seed=[])\n"})}),"\n",(0,i.jsx)(n.h3,{id:"parameters",children:"Parameters"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"funct"})," - ",(0,i.jsx)(n.strong,{children:"function: (input: List[float]) -> float"})," : The function to be minimized. It should take a list of doubles as input and return a double."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"space_min"})," - ",(0,i.jsx)(n.strong,{children:"List[float]"})," : Lower bound vector for the search space. Defines the minimum values for the parameters."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"space_max"})," - ",(0,i.jsx)(n.strong,{children:"List[float]"})," : Upper bound vector for the search space. Defines the maximum values for the parameters."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"iterations"})," - ",(0,i.jsx)(n.strong,{children:"int"}),", ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"optional"})})," : The number of iterations to run the algorithm. Default is 100."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"samples"})," - ",(0,i.jsx)(n.strong,{children:"int"}),", ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"optional"})})," : The number of samples to draw initially. Default is 10."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"acquisition_samples"})," - ",(0,i.jsx)(n.strong,{children:"int"}),", ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"optional"})})," : The number of samples to draw for acquisition function maximization. Default is 100."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"verbose"})," - ",(0,i.jsx)(n.strong,{children:"int"}),", ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"optional"})})," : The verbosity level. ",(0,i.jsx)(n.code,{children:"0"})," for final output, ",(0,i.jsx)(n.code,{children:"1"})," for output at each iteration. Default is 1."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"threshold"})," - ",(0,i.jsx)(n.strong,{children:"double"}),", ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"optional"})})," : Threshold value for the splitting function. Default is 0.5."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"group_cap"})," - ",(0,i.jsx)(n.strong,{children:"int"}),", ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"optional"})})," : Group cap for the good set. Default is 9999."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"bandwidth"})," - ",(0,i.jsx)(n.strong,{children:"List[float]"}),", ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"optional"})})," : Optional bandwidth vector for the KDE. If empty, dynamic bandwidth calculation is used."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"prior_weight"})," - ",(0,i.jsx)(n.strong,{children:"int"}),", ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"optional"})})," : Prior weight parameter for Non-Informative Prior. Default is 1."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"split"})," - ",(0,i.jsx)(n.strong,{children:"double"}),", ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"optional"})})," : Optional splitting threshold. Overrides dynamic threshold calculation."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"seed"})," - ",(0,i.jsx)(n.strong,{children:"List[Tuple[List[float], float]]"}),", ",(0,i.jsx)(n.em,{children:(0,i.jsx)(n.strong,{children:"optional"})})," : Seed data for the algorithm."]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"output",children:"Output"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"best_params"})," - ",(0,i.jsx)(n.strong,{children:"List[float]"}),": The best set of parameters found by the Bayesian Optimization process."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"notes",children:"Notes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Maximization can be achieved by returning the negative of objective function values."}),"\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"threshold"})," value must be positive and at most the square root of the number of samples."]}),"\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"split"})," value must be within [0, 1] if provided; otherwise, dynamic calculation is used."]}),"\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"space_min"})," and ",(0,i.jsx)(n.code,{children:"space_max"})," vectors must be of the same size, with each element of ",(0,i.jsx)(n.code,{children:"space_min"})," less than the corresponding element of ",(0,i.jsx)(n.code,{children:"space_max"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"bandwidth"})," vector, if provided, must be of the same size as the search space; otherwise, dynamic bandwidth calculation is used."]}),"\n",(0,i.jsxs)(n.li,{children:["Ensure the number of ",(0,i.jsx)(n.code,{children:"iterations"}),", ",(0,i.jsx)(n.code,{children:"samples"}),", and ",(0,i.jsx)(n.code,{children:"acquisition_samples"})," are positive integers."]}),"\n",(0,i.jsxs)(n.li,{children:["The ",(0,i.jsx)(n.code,{children:"seed"})," parameter must be a list of tuples, in which each tuple contains a list of parameters and the corresponding function value."]}),"\n",(0,i.jsxs)(n.li,{children:["Adjust the verbosity level with the ",(0,i.jsx)(n.code,{children:"verbose"})," parameter to control the amount of output during the iterations."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>l});var i=s(6540);const t={},r=i.createContext(t);function o(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);