"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[457],{9081:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>c,default:()=>m,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var i=t(4848),s=t(8453);const o={sidebar_position:3},c="Examples",a={id:"pso/examples",title:"Examples",description:"McCormick Function",source:"@site/docs/pso/examples.md",sourceDirName:"pso",slug:"/pso/examples",permalink:"/quickopt/docs/pso/examples",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Usage",permalink:"/quickopt/docs/pso/usage"},next:{title:"References",permalink:"/quickopt/docs/pso/references"}},r={},l=[{value:"McCormick Function",id:"mccormick-function",level:2}];function p(e){const n={code:"code",h1:"h1",h2:"h2",img:"img",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(n.h2,{id:"mccormick-function",children:"McCormick Function"}),"\n",(0,i.jsxs)(n.p,{children:["The McCormick function is a multimodal function that is commonly used to test optimization algorithms. It is defined as ",(0,i.jsx)(n.code,{children:"f(x,y) = sin(x + y) + (x - y)**2 - 1.5*x + 2.5*y + 1"})," along the domain ",(0,i.jsx)(n.code,{children:"[-1.5, 4] x [-3, 4]"}),". The global minimum of this function is located at ",(0,i.jsx)(n.code,{children:"f(-0.54719, -1.54719) = -1.9133"}),"."]}),"\n",(0,i.jsxs)(n.p,{children:["We implement the McCormick function as follows (note ",(0,i.jsx)(n.code,{children:"pso"})," maximizes fitness, so we negate the function):"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"def objective(params):\n    x, y = params\n    return -(np.sin(x + y) + (x - y)**2 - 1.5*x + 2.5*y + 1)\n"})}),"\n",(0,i.jsx)(n.p,{children:"We then define our search space:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"space_min = [-1.5, -3]\nspace_max = [4, 4]\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Finally, we run our particle swarm optimization. We choose to run the algorithm for 10 iterations, with a swarm size of 50 particles, alongside the default inertia, cognitive, and social weights, as well as the default velocity clamping of ",(0,i.jsx)(n.code,{children:"0.1"}),":"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:"result = quickopt.pso(funct=objective, space_min=space_min, space_max=space_max, iterations=10, swarm_size=50, verbose=1)\n"})}),"\n",(0,i.jsx)(n.p,{children:"The following is a heatmap of the optimization process, with each point representing a new optimal solution found by the algorithm:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"Particle Swarm Optimization Heatmap",src:t(6855).A+"",width:"1000",height:"800"})})]})}function m(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},6855:(e,n,t)=>{t.d(n,{A:()=>i});const i=t.p+"assets/images/mc-pso-1b2d17657c680590c658f9a38e2ff1ea.png"},8453:(e,n,t)=>{t.d(n,{R:()=>c,x:()=>a});var i=t(6540);const s={},o=i.createContext(s);function c(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:c(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);